name: Deploy Theme
on:
  push:
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Get Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Zip Theme
        run: yarn blog:zip
      - name: Debug fs
        run: ls -al /home/runner/work/website/website/vikas-potluri-theme.zip
      - name: Debug fs
        run: ls -al .
      - name: pwd
        run: pwd
      - uses: actions/checkout@master
      - name: Deploy Ghost Theme
        run: |
          ##########################
          # GENERATE A VALID TOKEN #
          ##########################

          TMPIFS=$IFS
          IFS=':' read ID SECRET <<< "$API_KEY"
          IFS=$TMPIFS

          # Prepare header and payload
          NOW=$(date +'%s')
          FIVE_MINS=$(($NOW + 300))
          HEADER="{\"alg\": \"HS256\",\"typ\": \"JWT\", \"kid\": \"$ID\"}"
          PAYLOAD="{\"iat\":$NOW,\"exp\":$FIVE_MINS,\"aud\": \"/v3/admin/\"}"

          # Helper function for perfoming base64 URL encoding
          base64_url_encode() {
              declare input=${1:-$(</dev/stdin)}
              # Use `tr` to URL encode the output from base64.
              printf '%s' "${input}" | base64 | tr -d '=' | tr '+' '-' |  tr '/' '_'
          }

          # Prepare the token body
          header_base64=$(base64_url_encode "$HEADER")
          payload_base64=$(base64_url_encode "$PAYLOAD")

          header_payload="${header_base64}.${payload_base64}"

          # Create the signature
          signature=$(printf '%s' "${header_payload}" | openssl dgst -binary -sha256 -mac HMAC -macopt hexkey:$SECRET | base64_url_encode)

          # Concat payload and signature into a valid JWT token
          TOKEN="${header_payload}.${signature}"

          # Make request
          curl -X POST -H "Authorization: Ghost $TOKEN" -F file=@vikas-potluri-theme.zip $API_BASE/ghost/api/v3/admin/themes
        env:
          API_BASE: ${{ secrets.GHOST_ADMIN_API_URL }}
          API_KEY: ${{ secrets.GHOST_ADMIN_API_KEY }}
